digraph finite_state_machine {
rankdir=LR;
graph [ dpi = 700 ];
size="24,24";
node [shape = circle, label="Have Rcep Command"] "Have Rcep Command_State";
node [shape = circle, label="Have Emftp Command"] "Have Emftp Command_State";
node [shape = circle, label="Have Int Protocol"] "Have Int Protocol_State";
node [shape = circle, label="Have Address"] "Have Address_State";
node [shape = circle, label="Defaults"] "Defaults_State";
node [shape = circle, label="Have Protocol"] "Have Protocol_State";
node [shape = circle, label="Have Routing"] "Have Routing_State";
node [shape = circle, label="After Init"] "After Init_State";
node [shape = box, label="Return"] "Return_Event";
node [shape = box, label="Version"] "Version_Event";
node [shape = box, label="Run"] "Run_Event";
node [shape = box, label="Maillist"] "Maillist_Event";
node [shape = box, label="Emftp"] "Emftp_Event";
node [shape = box, label="Put"] "Put_Event";
node [shape = box, label="Internal"] "Internal_Event";
node [shape = box, label="Error"] "Error_Event";
node [shape = box, label="Finished"] "Finished_Event";
node [shape = box, label="External"] "External_Event";
node [shape = box, label="Ok"] "Ok_Event";
node [shape = box, label="Clone"] "Clone_Event";
node [shape = box, label="Other"] "Other_Event";
node [shape = box, label="Exception"] "Exception_Event";
node [shape = box, label="Empty"] "Empty_Event";
node [shape = box, label="Rcep"] "Rcep_Event";
node [shape = box, label="Get"] "Get_Event";
node [shape = box, label="Message"] "Message_Event";
node [shape = box, label="None"] "None_Event";
edge [dir="both"] "Have Int Protocol_State" -> "Have Protocol_State";
edge [dir="forward"] "After Init_State" -> "Ok_Event";
edge [dir="forward"] "Ok_Event" -> "Have Routing_State";
edge [dir="both"] "After Init_State" -> "Error_Event";
edge [dir="forward"] "Have Routing_State" -> "Ok_Event";
edge [dir="forward"] "Ok_Event" -> "Have Address_State";
edge [dir="forward"] "Have Routing_State" -> "None_Event";
edge [dir="forward"] "None_Event" -> "Have Protocol_State";
edge [dir="both"] "Have Address_State" -> "External_Event";
edge [dir="forward"] "Have Address_State" -> "Internal_Event";
edge [dir="forward"] "Internal_Event" -> "Have Int Protocol_State";
edge [dir="both"] "Have Address_State" -> "Maillist_Event";
edge [dir="both"] "Have Address_State" -> "Finished_Event";
edge [dir="forward"] "Have Protocol_State" -> "Rcep_Event";
edge [dir="forward"] "Rcep_Event" -> "Have Rcep Command_State";
edge [dir="forward"] "Have Protocol_State" -> "Emftp_Event";
edge [dir="forward"] "Emftp_Event" -> "Have Emftp Command_State";
edge [dir="both"] "Have Protocol_State" -> "Return_Event";
edge [dir="both"] "Have Protocol_State" -> "Other_Event";
edge [dir="forward"] "Have Int Protocol_State" -> "Return_Event";
edge [dir="forward"] "Return_Event" -> "Have Address_State";
edge [dir="both"] "Have Int Protocol_State" -> "Other_Event";
edge [dir="both"] "Have Rcep Command_State" -> "Run_Event";
edge [dir="both"] "Have Rcep Command_State" -> "Clone_Event";
edge [dir="both"] "Have Rcep Command_State" -> "Put_Event";
edge [dir="both"] "Have Rcep Command_State" -> "Get_Event";
edge [dir="both"] "Have Rcep Command_State" -> "Version_Event";
edge [dir="both"] "Have Rcep Command_State" -> "Empty_Event";
edge [dir="both"] "Have Emftp Command_State" -> "Get_Event";
edge [dir="both"] "Defaults_State" -> "Message_Event";
edge [dir="both"] "Defaults_State" -> "Exception_Event";
labelloc="t";
label="erbot State Machine Diagram - Generated on 2022-02-12 22:17:09";
}
