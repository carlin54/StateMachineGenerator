digraph finite_state_machine {
rankdir=LR;
graph [ dpi = 500 ];
size="24,24";
node [shape = circle, label="Outside Comment"] "Outside Comment_State";
node [shape = circle, label="Defaults"] "Defaults_State";
node [shape = circle, label="Skip Comment"] "Skip Comment_State";
node [shape = circle, label="After Comment Slash"] "After Comment Slash_State";
node [shape = circle, label="After Comment Star"] "After Comment Star_State";
node [shape = circle, label="After Init"] "After Init_State";
node [shape = circle, label="Skip Quote"] "Skip Quote_State";
node [shape = circle, label="Skip Eoln"] "Skip Eoln_State";
node [shape = circle, label="After Slash"] "After Slash_State";
node [shape = box, label="Ok"] "Ok_Event";
node [shape = box, label="Quote"] "Quote_Event";
node [shape = box, label="NewLine"] "NewLine_Event";
node [shape = box, label="Other"] "Other_Event";
node [shape = box, label="Error"] "Error_Event";
node [shape = box, label="End Of File"] "End Of File_Event";
node [shape = box, label="Slash"] "Slash_Event";
node [shape = box, label="Star"] "Star_Event";
node [shape = box, label="Exception"] "Exception_Event";
edge [dir="forward"] "After Init_State" -> "Ok_Event";
edge [dir="forward"] "Ok_Event" -> "Outside Comment_State";
edge [dir="both"] "After Init_State" -> "Error_Event";
edge [dir="forward"] "Outside Comment_State" -> "Quote_Event";
edge [dir="forward"] "Quote_Event" -> "Skip Quote_State";
edge [dir="forward"] "Outside Comment_State" -> "Slash_Event";
edge [dir="forward"] "Slash_Event" -> "After Slash_State";
edge [dir="both"] "Outside Comment_State" -> "Star_Event";
edge [dir="both"] "Outside Comment_State" -> "NewLine_Event";
edge [dir="both"] "Outside Comment_State" -> "Other_Event";
edge [dir="forward"] "Skip Quote_State" -> "Quote_Event";
edge [dir="forward"] "Quote_Event" -> "Outside Comment_State";
edge [dir="both"] "Skip Quote_State" -> "Slash_Event";
edge [dir="both"] "Skip Quote_State" -> "Star_Event";
edge [dir="both"] "Skip Quote_State" -> "NewLine_Event";
edge [dir="both"] "Skip Quote_State" -> "Other_Event";
edge [dir="forward"] "After Slash_State" -> "Quote_Event";
edge [dir="forward"] "Quote_Event" -> "Outside Comment_State";
edge [dir="forward"] "After Slash_State" -> "Slash_Event";
edge [dir="forward"] "Slash_Event" -> "Skip Eoln_State";
edge [dir="forward"] "After Slash_State" -> "Star_Event";
edge [dir="forward"] "Star_Event" -> "Skip Comment_State";
edge [dir="forward"] "After Slash_State" -> "NewLine_Event";
edge [dir="forward"] "NewLine_Event" -> "Outside Comment_State";
edge [dir="forward"] "After Slash_State" -> "Other_Event";
edge [dir="forward"] "Other_Event" -> "Outside Comment_State";
edge [dir="both"] "Skip Eoln_State" -> "Quote_Event";
edge [dir="both"] "Skip Eoln_State" -> "Slash_Event";
edge [dir="both"] "Skip Eoln_State" -> "Star_Event";
edge [dir="forward"] "Skip Eoln_State" -> "NewLine_Event";
edge [dir="forward"] "NewLine_Event" -> "Outside Comment_State";
edge [dir="both"] "Skip Eoln_State" -> "Other_Event";
edge [dir="both"] "Skip Comment_State" -> "Quote_Event";
edge [dir="forward"] "Skip Comment_State" -> "Slash_Event";
edge [dir="forward"] "Slash_Event" -> "After Comment Slash_State";
edge [dir="forward"] "Skip Comment_State" -> "Star_Event";
edge [dir="forward"] "Star_Event" -> "After Comment Star_State";
edge [dir="both"] "Skip Comment_State" -> "NewLine_Event";
edge [dir="both"] "Skip Comment_State" -> "Other_Event";
edge [dir="both"] "Skip Comment_State" -> "End Of File_Event";
edge [dir="forward"] "After Comment Star_State" -> "Quote_Event";
edge [dir="forward"] "Quote_Event" -> "Skip Comment_State";
edge [dir="forward"] "After Comment Star_State" -> "Slash_Event";
edge [dir="forward"] "Slash_Event" -> "Outside Comment_State";
edge [dir="both"] "After Comment Star_State" -> "Star_Event";
edge [dir="forward"] "After Comment Star_State" -> "NewLine_Event";
edge [dir="forward"] "NewLine_Event" -> "Skip Comment_State";
edge [dir="forward"] "After Comment Star_State" -> "Other_Event";
edge [dir="forward"] "Other_Event" -> "Skip Comment_State";
edge [dir="both"] "After Comment Star_State" -> "End Of File_Event";
edge [dir="forward"] "After Comment Slash_State" -> "Quote_Event";
edge [dir="forward"] "Quote_Event" -> "Skip Comment_State";
edge [dir="forward"] "After Comment Slash_State" -> "Slash_Event";
edge [dir="forward"] "Slash_Event" -> "Skip Comment_State";
edge [dir="forward"] "After Comment Slash_State" -> "Star_Event";
edge [dir="forward"] "Star_Event" -> "Skip Comment_State";
edge [dir="forward"] "After Comment Slash_State" -> "NewLine_Event";
edge [dir="forward"] "NewLine_Event" -> "Skip Comment_State";
edge [dir="forward"] "After Comment Slash_State" -> "Other_Event";
edge [dir="forward"] "Other_Event" -> "Skip Comment_State";
edge [dir="both"] "After Comment Slash_State" -> "End Of File_Event";
edge [dir="both"] "Defaults_State" -> "Exception_Event";
edge [dir="both"] "Defaults_State" -> "End Of File_Event";
labelloc="t";
label="stripper State Machine Diagram - Generated on 2022-02-12 22:19:20";
}
